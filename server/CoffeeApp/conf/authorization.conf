# Role Based Access Control (RBAC)
# ~~~~~

play.rbac.enabled = true

play.modules.enabled += "security.authorization.OnStartModule"

play.rbac.roles {
  #
  # providerType
  #
  providerType_r = [
    controllers.ProviderTypes.findById,
    controllers.ProviderTypes.findAllByAll,
    controllers.ProviderTypes.getProviderTypesByName
  ]

  providerType_u = [
    controllers.ProviderTypes.findAllByAll,
    controllers.ProviderTypes.findById,
    controllers.ProviderTypes.getProviderTypesByName
  ]

  #
  # provider
  #
  provider_r = [
    controllers.Providers.findById,
    controllers.Providers.findAll,
    controller.Providers.findAllSearch,
    controllers.Providers.getByIdentificationDoc,
    controllers.Providers.getProvidersByName,
    controllers.Providers.getByTypeProvider,
    controllers.Providers.getByNameDocByTypeProvider,
    controllers.Providers.uploadPhotoProvider
  ]

  provider_u = [
    controllers.Providers.findById,
    controllers.Providers.findAll,
    controller.Providers.findAllSearch,
    controllers.Providers.getByIdentificationDoc,
    controllers.Providers.getProvidersByName,
    controllers.Providers.getByTypeProvider,
    controllers.Providers.getByNameDocByTypeProvider,
    controllers.Providers.uploadPhotoProvider
    ccontrollers.Providers.create,
    controllers.Providers.update,
    controllers.Providers.delete,
    controllers.Providers.deletes
  ]

  #
  # invoice
  #
  invoice_r = [
    controllers.Invoices.findAll,
    controllers.Invoices.findAllSearch,
    controllers.Invoices.getByDateByTypeProvider,
    controllers.Invoices.getByDateByProviderId,
    controllers.Invoices.getOpenByProviderId
  ]

  invoice_u = [
    controllers.Invoices.findAll,
    controllers.Invoices.findAllSearch,
    controllers.Invoices.getByDateByTypeProvider,
    controllers.Invoices.getByDateByProviderId,
    controllers.Invoices.getOpenByProviderId,
    controllers.Invoices.createReceipt,
    controllers.Invoices.create,
    controllers.Invoices.buyHarvestsAndCoffe,
    controllers.Invoices.updateBuyHarvestsAndCoffe,
    controllers.Invoices.update,
    controllers.Invoices.delete
  ]

  #
  # unit
  #
  unit_r = [
    controllers.Units.findById,
    controllers.Units.findAll
  ]

  unit_u = [
    controllers.Units.findById,
    controllers.Units.findAll,
    controllers.Units.create,
    controllers.Units.update,
    controllers.Units.delete
  ]

  #
  # itemType
  #
  itemType_r = [
    controllers.ItemTypes.findAll,
    controllers.ItemTypes.findAllSearch,
    controllers.ItemTypes.preCreate,
    controllers.ItemTypes.findById,
    controllers.ItemTypes.getByProviderTypeId,
    controllers.ItemTypes.getByNameItemType

  ]

  itemType_u = [
    controllers.ItemTypes.findAll,
    controllers.ItemTypes.findAllSearch,
    controllers.ItemTypes.preCreate,
    controllers.ItemTypes.findById,
    controllers.ItemTypes.getByProviderTypeId,
    controllers.ItemTypes.getByNameItemType,
    controllers.ItemTypes.create,
    controllers.ItemTypes.update,
    controllers.ItemTypes.delete
  ]

  #
  # lot
  #
  lot_r = [
    controllers.Lots.findAll,
    controllers.Lots.findAllSearch,
    controllers.Lots.getByNameLot,
    controllers.Lots.getByStatusLot,
    controllers.Lots.getByIdFarm,
    controllers.Lots.deletes
  ]

  lot_u = [
    controllers.Lots.findAll,
    controllers.Lots.findAllSearch,
    controllers.Lots.preCreate,
    controllers.Lots.create,
    controllers.Lots.update,
    controllers.Lots.delete,
    controllers.Lots.getByNameLot,
    controllers.Lots.getByStatusLot,
    controllers.Lots.getByIdFarm,
    controllers.Lots.deletes
  ]

  #
  # farm
  #
  farm_r = [
    controllers.Farms.findById,
    controllers.Farms.findByAll,
    controllers.Farms.findAllSearch
  ]

  farm_u = [
    controllers.Farms.findById,          
    controllers.Farms.findByAll,         
    controllers.Farms.findAllSearch      
  ]

  #
  # purity
  #
  purity_r = [
    controllers.Purities.findAll,
    controllers.Purities.findAllSearch,
    controllers.Purities.findById,
    controllers.Purities.getByNamePurity,
    controllers.Purities.getByStatusPurity
  ]

  purity_u = [
    controllers.Purities.findAll,
    controllers.Purities.findAllSearch,
    controllers.Purities.findById,
    controllers.Purities.getByNamePurity,
    controllers.Purities.getByStatusPurity,
    controllers.Purities.preCreate,
    controllers.Purities.create,
    controllers.Purities.update,
    controllers.Purities.delete
  ]

  #
  # invoiceDetailPurity
  #
  invoiceDetailPurity_r = [
    controllers.InvoiceDetailPurities.findAll,
    controllers.InvoiceDetailPurities.findById
  ]

  invoiceDetailPurity_u = [
    controllers.InvoiceDetailPurities.findAll,
    controllers.InvoiceDetailPurities.findById,
    controllers.InvoiceDetailPurities.create,
    controllers.InvoiceDetailPurities.update,
    controllers.InvoiceDetailPurities.delete
  ]

  #
  # invoiceDetail
  #
  invoiceDetail_r = [
    controllers.InvoiceDetails.findAll,
    controllers.InvoiceDetails.findAllSearch,
    controllers.InvoiceDetails.findById,
    controllers.InvoiceDetails.findAllByIdInvoice
  ]

  invoiceDetail_u = [
    controllers.InvoiceDetails.findAll,
    controllers.InvoiceDetails.findAllSearch,
    controllers.InvoiceDetails.findById,
    controllers.InvoiceDetails.findAllByIdInvoice,
    controllers.InvoiceDetails.preCreate,
    controllers.InvoiceDetails.create,
    controllers.InvoiceDetails.update,
    controllers.InvoiceDetails.delete,
    controllers.InvoiceDetails.deleteAllByIdInvoiceAndDate
  ]

  #
  # store
  #
  store_r = [
    controllers.Stores.findAll,
    Controllers.Stores.findAllSearch,
    controllers.Stores.findById,
    controllers.Stores.getByStatusStore
  ]

  store_u = [
    controllers.Stores.findAll,
    Controllers.Stores.findAllSearch,
    controllers.Stores.findById,
    controllers.Stores.getByStatusStore,
    controllers.Stores.preCreate,
    controllers.Stores.create,
    controllers.Stores.update,
    controllers.Stores.delete
  ]

}

play.rbac.groups {
  #
  # super_user
  #
  super = [
    store_u,
    invoiceDetail_u,
    invoiceDetailPurity_u,
    purity_u,
    farm_u,
    lot_u,
    itemType_u,
    unit_u,
    invoice_u,
    provider_u,
    providerType_u
  ]

  #
  # client
  #
  client = [
    store_r,
    invoiceDetail_u,
    invoiceDetailPurity_u,
    purity_r,
    farm_u,
    lot_r,
    itemType_u,
    unit_r,
    invoice_r,
    provider_r,
    providerType_r
  ]

  #
  # user
  #
  user = [
    store_r,
    invoiceDetail_r,
    invoiceDetailPurity_r,
    purity_r,
    farm_r,
    lot_r,
    itemType_r,
    unit_r,
    invoice_r,
    provider_r,
    providerType_r
  ]


//  play.rbac.groupUser {
//    #
//    # super_user
//    #
//    super = [
//      sm
//    ]
//
//    #
//    # user
//    #
//    user = [
//      yenny
//    ]
//
//    #
//    # client
//    #
//    client = [
//      han,
//      sm
//    ]
//  }


}