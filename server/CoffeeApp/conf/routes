# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file: Asset)
#GET     /assets/*file               controllers.Assets.at(path="/public", file)

# GET
# POST
# PUT
# DELETE


###############################################################################
#·······                 Authentication                             ··········#
###############################################################################
POST    /oauth/token                                                            security.authentication.oauth2.PasswordGrant.token()
POST    /oauth/revokeToken                                                      security.authentication.oauth2.PasswordGrant.revokeToken()
#POST    /oauth/auth                                                            security.authentication.oauth2.ImplicitGrant.auth()

###############################################################################
#·······                Farm                                        ··········#
###############################################################################
GET     /farm/search                                                            controllers.Farms.findAll(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
#GET     /farm/search                                                            controllers.Farms.findAllSearch(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
GET     /farm                                                                   controllers.Farms.findAll(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
GET     /farm/:id                                                               controllers.Farms.findById(id : Long)

###############################################################################
#·······                      Invoice                               ··········#
###############################################################################
GET     /invoice                                                                controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Long, startDate: String ?= null, endDate: String ?= null)
GET     /invoice/search                                                         controllers.Invoices.findAllSearch(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null,id_provider: Integer ?= -2, idProviderType: Integer ?= 2, startDate: String ?= null, endDate: String ?= null)
GET     /invoice/getByDateByProviderId/:ProviderId                              controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, ProviderId: Long,startDate: String ?= null, endDate: String ?= null)
GET     /invoice/getByDateByProviderId/:date/:ProviderId                        controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, ProviderId: Long, date: String, endDate: String ?= null)

GET     /invoice/search                                                         controllers.Invoices.search(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Integer ?= null, idProviderType: Long, startDate: String ?= null, endDate: String ?= null)
#GET     /invoice/getByDateByTypeProvider/:date/:typeProvider/:pageindex/:pagesize  controllers.Invoices.getByDateByTypeProvider(date: String, typeProvider: Integer,pageindex: Integer, pagesize: Integer)

GET     /invoice/:id                                                            controllers.Invoices.findById(id : Long)
GET     /invoice/createReceipt/:id                                              controllers.Invoices.createReceipt(id : Long)
POST    /invoice                                                                controllers.Invoices.create()
POST    /invoice/buyHarvestsAndCoffe                                            controllers.Invoices.buyHarvestsAndCoffe()
PUT     /invoice/buyHarvestsAndCoffe                                            controllers.Invoices.updateBuyHarvestsAndCoffe()
PUT     /invoice                                                                controllers.Invoices.update()
DELETE  /invoice/:id                                                            controllers.Invoices.delete(id : Long)


###############################################################################
#·······                       ItemType                             ··········#
###############################################################################
GET     /itemType                                                               controllers.ItemTypes.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null)
#GET     /itemType/search                                                        controllers.ItemTypes.findAllSearch(name: String ?= null, pager: models.manager.requestUtils.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
GET     /itemType/new                                                           controllers.ItemTypes.preCreate()
GET     /itemType/:id                                                           controllers.ItemTypes.findById(id : Long)
GET     /itemType/getByProviderTypeId/:id_ProviderType/:status                  controllers.ItemTypes.getByProviderTypeId(id_ProviderType: Long, status:Integer )
GET     /itemType/getByNameItemType/:NameItemType/:order                        controllers.ItemTypes.getByNameItemType(NameItemType: String, order:String )
POST    /itemType                                                               controllers.ItemTypes.create()
PUT     /itemType                                                               controllers.ItemTypes.update()
DELETE  /itemType/:id                                                           controllers.ItemTypes.delete(id : Long)




###############################################################################
#·······                 ProviderType                               ··········#
###############################################################################
GET     /providerType/getProviderTypesByName/:name/:order                       controllers.ProviderTypes.getProviderTypesByName(name:String,order:String)
GET     /providerType/findAll/:index/:size                                      controllers.ProviderTypes.findAll(index: Integer, size: Integer)
GET     /providerType/:id                                                       controllers.ProviderTypes.findById(id : Long)


