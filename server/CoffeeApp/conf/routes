# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file: Asset)
#GET     /assets/*file               controllers.Assets.at(path="/public", file)

# GET
# POST
# PUT
# DELETE


###############################################################################
#·······                 Authentication                             ··········#
###############################################################################
POST    /oauth/token                                                            security.authentication.oauth2.PasswordGrant.token()
POST    /oauth/revokeToken                                                      security.authentication.oauth2.PasswordGrant.revokeToken()
#POST    /oauth/auth                                                            security.authentication.oauth2.ImplicitGrant.auth()

###############################################################################
#·······                Farm                                        ··········#
###############################################################################
GET     /farm/search                                                            controllers.Farms.findAll(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
#GET     /farm/search                                                            controllers.Farms.findAllSearch(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
GET     /farm                                                                   controllers.Farms.findAll(name: String ?= null, pager: controllers.parsers.queryStringBindable.Pager, sort: String ?= null, collection: String ?= null)
GET     /farm/:id                                                               controllers.Farms.findById(id : Long)

###############################################################################
#·······                      Invoice                               ··········#
###############################################################################
GET     /invoice                                                                controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Long ?= 0L, startDate: String ?= null, endDate: String ?= null)
GET     /invoice/search                                                         controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Long ?= 0L, startDate: String ?= null, endDate: String ?= null)
GET     /invoice/getByDateByProviderId/:ProviderId                              controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, ProviderId: Long, startDate: String ?= null, endDate: String ?= null)
GET     /invoice/getByDateByProviderId/:date/:ProviderId                        controllers.Invoices.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, ProviderId: Long, date: String, endDate: String ?= null)

#GET     /invoice/getByDateByTypeProvider/:date/:typeProvider/:pageindex/:pagesize controllers.Invoices.findAllSearch(name: String ?= null, pageindex: Integer, pagesize: Integer, sort: String ?= null, collection: String ?= null, typeProvider: Long, date: String, endDate: String ?= null)
#GET     /invoice/search                                                         controllers.Invoices.findAllSearch(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Long ?= 0L, idProviderType: Long ?= 0L, startDate: String ?= null, endDate: String ?= null)
#GET     /invoice/getByDateByTypeProvider/:date/:typeProvider/:pageindex/:pagesize  controllers.Invoices.findAllSearch(date: String ?= null, typeProvider: Integer,pageindex: Integer?= null, pagesize: Integer?= null)

GET     /invoice/:id                                                            controllers.Invoices.findById(id : Long)
GET     /invoice/createReceipt/:id                                              controllers.Invoices.createReceipt(id : Long)
POST    /invoice                                                                controllers.Invoices.create()
POST    /invoice/buyHarvestsAndCoffe                                            controllers.Invoices.buyHarvestsAndCoffe()
PUT     /invoice/buyHarvestsAndCoffe                                            controllers.Invoices.updateBuyHarvestsAndCoffe()
PUT     /invoice                                                                controllers.Invoices.update()
DELETE  /invoice/:id                                                            controllers.Invoices.delete(id : Long)

###############################################################################
#·······            InvoiceDetail                                   ··········#
###############################################################################
GET     /invoiceDetail                                                          controllers.InvoiceDetails.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, invoiceId: Long ?= 0L)
GET     /invoiceDetail/search                                                   controllers.InvoiceDetails.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, invoiceId: Long ?= 0L)
GET     /invoiceDetail/findAllByIdInvoice/:invoiceId                            controllers.InvoiceDetails.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, invoiceId: Long)
GET     /invoiceDetail/:id                                                      controllers.InvoiceDetails.findById(id : Long)
GET     /invoiceDetail/new                                                      controllers.InvoiceDetails.preCreate()
POST    /invoiceDetail                                                          controllers.InvoiceDetails.create()
PUT     /invoiceDetail                                                          controllers.InvoiceDetails.update()
DELETE  /invoiceDetail/:id                                                      controllers.InvoiceDetails.delete(id : Long)
DELETE  /invoiceDetail/deleteAllByIdInvoiceAndDate/:idInvoice/:date             controllers.InvoiceDetails.deleteAllByIdInvoiceAndDate(idInvoice : Long, date: String)


###############################################################################
#·······                       ItemType                             ··········#
###############################################################################
GET     /itemType                                                               controllers.ItemTypes.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Long ?= 0L, status: Integer?= null)
GET     /itemType/search                                                        controllers.ItemTypes.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_provider: Long ?= 0L, status: Integer?= null)
GET     /itemType/getByProviderTypeId/:id_ProviderType/:status                  controllers.ItemTypes.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, id_ProviderType: Long, status: Integer)
GET     /itemType/getByNameItemType/:NameItemType/:order                        controllers.ItemTypes.findAll(NameItemType: String, pageindex: Integer ?= null, pagesize: Integer ?= null, order: String, collection: String ?= null, id_provider: Long ?= 0L, status: Integer?= null)
GET     /itemType/:id                                                           controllers.ItemTypes.findById(id : Long)
GET     /itemType/new                                                           controllers.ItemTypes.preCreate()
POST    /itemType                                                               controllers.ItemTypes.create()
PUT     /itemType                                                               controllers.ItemTypes.update()
DELETE  /itemType/:id                                                           controllers.ItemTypes.delete(id : Long)

###############################################################################
#·······                          lot                               ··········#
###############################################################################
GET     /lot                                                                    controllers.Lots.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, all: Integer ?= 0, idFarm:  Long ?= 0L, status: Integer ?= null)
GET     /lot/search                                                             controllers.Lots.findAll(name: String ?= null, pageindex: Integer ?= null, pagesize: Integer ?= null, sort: String ?= null, collection: String ?= null, all: Integer ?= 0, idFarm:  Long ?= 0L, status: Integer ?= null)
#TODO REVIEW ORDER
GET     /lot/getByNameLot/:NameLot/:order                                       controllers.Lots.getByNameLot(NameLot: String, order:String )
GET     /lot/getByStatusLot/:StatusLot/:order                                   controllers.Lots.getByStatusLot(StatusLot: String, order:String )
GET     /lot/:id                                                                controllers.Lots.findById(id : Long)
GET     /lot/new                                                                controllers.Lots.preCreate()
POST    /lot                                                                    controllers.Lots.create()
PUT     /lot                                                                    controllers.Lots.update()
DELETE  /lot/:id                                                                controllers.Lots.delete(id : Long)
POST    /lot/deletes                                                            controllers.Lots.deletes()


###############################################################################
#·······                 ProviderType                               ··········#
###############################################################################
GET     /providerType/getProviderTypesByName/:name/:order                       controllers.ProviderTypes.getProviderTypesByName(name:String,order:String)
GET     /providerType/findAll/:index/:size                                      controllers.ProviderTypes.findAll(index: Integer, size: Integer)
GET     /providerType/:id                                                       controllers.ProviderTypes.findById(id : Long)


