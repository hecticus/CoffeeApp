# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                                   controllers.HomeController.index

# An example controller showing how to write asynchronous code
GET     /message                            controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file: Asset)
#GET     /assets/*file               controllers.Assets.at(path="/public", file)

# GET
# POST
# PUT
# DELETE


###############################################################################
#·······                     Authentication                         ··········#
###############################################################################
POST    /oauth/token                                                            security.authentication.oauth2.PasswordGrant.token()
POST    /oauth/revokeToken                                                      security.authentication.oauth2.PasswordGrant.revokeToken()
#POST    /oauth/auth                                                            security.authentication.oauth2.ImplicitGrant.auth()


###############################################################################
#·······                UpdatePasswordManager                       ··········#
###############################################################################
#POST    /users/recoverPassword                                                  security.authentication.updatePassword.UpdatePasswordManager.recoverPassword()
#POST    /users/resetPassword                                                    security.authentication.updatePassword.UpdatePasswordManager.resetPassword()
#

###############################################################################
#·······                     User                                   ··········#
###############################################################################
GET     /user                                                                   controllers.Users.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, name: String ?= null, firstName: String ?= null, lastName: String ?= null,  deleted: Boolean ?= false )
GET     /user/:id                                                               controllers.Users.findById(id : Long)
POST    /user                                                                   controllers.Users.create()
PUT     /user/:id                                                               controllers.Users.update(id : Long)
DELETE  /user/:id                                                               controllers.Users.delete(id : Long)
GET     /user/email/:email                                                      controllers.Users.findByEmail(email: String)
GET     /user/authUser/:authUserId                                              controllers.Users.findByAuthUser(authUserId: java.lang.Long)
PATCH   /user/:id/password                                                      controllers.Users.updatePassword(id: Long)
POST    /oauth/changepassword                                                   controllers.Users.changePassword()

###############################################################################
#·······                     Roles                                  ··········#
###############################################################################
GET     /roles                                                                   security.controllers.Roles.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, name: String ?= null, deleted: Boolean ?= false )
GET     /roles/:id                                                               security.controllers.Roles.findById(id : Long)
POST    /roles                                                                   security.controllers.Roles.create()
PUT     /roles/:id                                                               security.controllers.Roles.update(id : Long)
DELETE  /roles/:id                                                               security.controllers.Roles.delete(id : Long)

###############################################################################
#·······                     Group                                  ··········#
###############################################################################
GET     /group                                                                   security.controllers.Groups.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, name: String ?= null, deleted: Boolean ?= false )
GET     /group/:id                                                               security.controllers.Groups.findById(id : Long)
POST    /group                                                                   security.controllers.Groups.create()
PUT     /group/:id                                                               security.controllers.Groups.update(id : Long)
DELETE  /group/:id                                                               security.controllers.Groups.delete(id : Long)

###############################################################################
#·······                        Farm                                ··········#
###############################################################################
GET     /farm                                                                   controllers.Farms.findAll(index: Integer ?= null, size: Integer ?= null, collection: String ?= null, nameFarm: String ?= null,  sort: String ?= null, statusFarm: Long ?= 0L, deleted: Boolean ?= false)
GET     /farm/:id                                                               controllers.Farms.findById(id : Long)
POST    /farm                                                                   controllers.Farms.create()
POST    /farm/delete                                                            controllers.Farms.deletes()
PUT     /farm/:id                                                               controllers.Farms.update(id : Long)
DELETE  /farm/:id                                                               controllers.Farms.delete(id : Long)
#
################################################################################
##·······                      Invoice                               ··········#
################################################################################
GET     /invoice                                                                controllers.Invoices.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, providerId: Long ?= 0L, typeProvider: Long ?= 0L, startDate: String ?= null, endDate: String ?= null, statusInvoice: Long ?= 0L, deleted: Boolean ?= false, nitName: String ?= null)
GET     /invoice/createTotalReport                                              controllers.Invoices.createTotalReport()
GET     /invoice/createDetailReport                                             controllers.Invoices.createDetailReport()
GET     /invoice/:id                                                            controllers.Invoices.findById(id : Long)
GET     /invoice/createReceipt/:id                                              controllers.Invoices.createReceipt(id : Long)
POST    /invoice2                                                               controllers.Invoices.buyHarvestsAndCoffe()
POST    /invoice/delete                                                         controllers.Invoices.deletes()
POST    /invoice                                                                controllers.Invoices.create()
POST    /invoice/close                                                          controllers.Invoices.closeInvoice()
PUT     /invoice/:id                                                            controllers.Invoices.update(id : Long)
DELETE  /invoice/:id                                                            controllers.Invoices.delete(id : Long)

################################################################################
##·······                       InvoiceDetail                        ··········#
################################################################################
GET     /invoiceDetail                                                          controllers.InvoiceDetails.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null,  sort: String ?= null, invoice: Long ?= 0L, itemType: Long ?= 0L, lot: Long ?= 0L, store: Long ?= 0L,  nameDelivered: String ?= null, nameReceived: String ?= null, startDate: String ?= null,  statusInvoiceDetail: Long ?= 0L, deleted: Boolean ?= false)
GET     /invoiceDetail/:id                                                      controllers.InvoiceDetails.findById(id : Long)
POST    /invoiceDetail                                                          controllers.InvoiceDetails.create()
POST    /invoiceDetail/delete                                                   controllers.InvoiceDetails.deletes()
PUT     /invoiceDetail/:id                                                      controllers.InvoiceDetails.update(id : Long)
DELETE  /invoiceDetail/:id                                                      controllers.InvoiceDetails.delete(id : Long)

################################################################################
##·······              InvoiceDetailPurity                           ··········#
################################################################################
GET     /invoiceDetailPurity                                                    controllers.InvoiceDetailPurities.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null,  sort: String ?= null, invoiceDetail: Long ?= 0L, purity: Long ?= 0L, deleted: Boolean ?= false)
GET     /invoiceDetailPurity/:id                                                controllers.InvoiceDetailPurities.findById(id : Long)
POST    /invoiceDetailPurity/delete                                             controllers.InvoiceDetailPurities.deletes()
POST    /invoiceDetailPurity                                                    controllers.InvoiceDetailPurities.create()
PUT     /invoiceDetailPurity/:id                                                controllers.InvoiceDetailPurities.update(id : Long)
DELETE  /invoiceDetailPurity/:id                                                controllers.InvoiceDetailPurities.delete(id : Long)

################################################################################
##·······                       ItemType                             ··········#
################################################################################
GET     /itemType                                                               controllers.ItemTypes.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, nameItemType: String ?= null, providerType: Long ?= 0L, unit: Long ?= 0L, deleted: Boolean ?= false)
GET     /itemType/:id                                                           controllers.ItemTypes.findById(id : Long)
POST    /itemType                                                               controllers.ItemTypes.create()
POST    /itemType                                                               controllers.ItemTypes.deletes()
PUT     /itemType/:id                                                           controllers.ItemTypes.update(id : Long)
DELETE  /itemType/:id                                                           controllers.ItemTypes.delete(id : Long)

################################################################################
##·······                          lot                               ··········#
################################################################################
GET     /lot                                                                    controllers.Lots.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, nameLot: String ?= null, farm:  Long ?= 0L, statusLot: Long ?= 0L, deleted: Boolean ?= false)
GET     /lot/:id                                                                controllers.Lots.findById(id : Long)
POST    /lot                                                                    controllers.Lots.create()
POST    /lot/delete                                                             controllers.Lots.deletes()
PUT     /lot/:id                                                                controllers.Lots.update(id : Long)
DELETE  /lot/:id                                                                controllers.Lots.delete(id : Long)


################################################################################
##·······                          Multimedias                       ··········#
################################################################################
GET     /multimedias                                                            controllers.Multimedias.findAll()
GET     /multimedias/:id                                                        controllers.Multimedias.findById(id: Long)
DELETE  /multimedias/:id                                                        controllers.Multimedias.delete(id: Long)
PUT     /multimedias/:id                                                        controllers.Multimedias.update(id : Long)
POST    /multimedias/delete                                                     controllers.Multimedias.deletes()
POST    /multimedias/deleteUselessObjectsToContainer                            controllers.Multimedias.deleteUselessObjectsToContainer()


################################################################################
##·······                          Provider                          ··········#
################################################################################
GET     /provider                                                               controllers.Providers.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, nameProvider: String ?= null, providerType: Long ?= 0L, nitProvider: String ?= null, addressProvider: String ?= null, numberProvider: String ?= null, emailProvider: String ?= null, contactNameProvider: String ?= null, statusProvider: Long ?= 0L, deleted: Boolean ?= false)
#GET     /provider/:id                                                           controllers.Providers.findById(id : Long, collection: String ?= null)
GET     /provider/:id                                                           controllers.Providers.findById(id : Long)
POST    /provider                                                               controllers.Providers.create()
POST    /provider/delete                                                        controllers.Providers.deletes()
#POST    /provider/mediaProfile                                                  controllers.Multimedias.createProviderProfile()
POST    /provider/:id/mediaProfile                                              controllers.Multimedias.createProviderProfile(id: Long)
PUT     /provider/:id                                                           controllers.Providers.update(id : Long)
DELETE  /provider/:id                                                           controllers.Providers.delete(id : Long)

################################################################################
##·······                 ProviderType                               ··········#
################################################################################
GET     /providerType                                                           controllers.ProviderTypes.findAll( index: Integer ?= null, size: Integer ?= null, collection: String ?= null, sort: String ?= null, nameProviderType: String ?= null, deleted: Boolean ?= false)
GET     /providerType/:id                                                       controllers.ProviderTypes.findById(id : Long)
POST    /providerType                                                           controllers.ProviderTypes.create()
POST    /providerType/delete                                                    controllers.ProviderTypes.deletes()
PUT     /providerType/:id                                                       controllers.ProviderTypes.update(id : Long)
DELETE  /providerType/:id                                                       controllers.ProviderTypes.delete(id : Long)

################################################################################
##·······                        Purity                              ··········#
################################################################################
GET     /purity                                                                 controllers.Purities.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, namePurity: String ?= null, deleted: Boolean ?= false)
GET     /purity/:id                                                             controllers.Purities.findById(id : Long)
POST    /purity                                                                 controllers.Purities.create()
POST    /purity/delete                                                          controllers.Purities.deletes()
PUT     /purity/:id                                                             controllers.Purities.update(id : Long)
DELETE  /purity/:id                                                             controllers.Purities.delete(id : Long)

################################################################################
##·······                     Status                                 ··········#
################################################################################
#StatusFarm
GET     /statusFarm                                                             controllers.statusController.StatusFarms.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null)

#StatusInvoices
GET     /statusInvoice                                                         controllers.statusController.StatusInvoices.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null)

#StatusLots
GET     /statusLot                                                             controllers.statusController.StatusLots.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null)
#GET     /statusLot/:id                                                          controllers.StatusInvoices.findById(id : Long)

#StatusProviders
GET     /statusProvider                                                        controllers.statusController.StatusProviders.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null)

#StatusStore
GET     /statusStore                                                           controllers.statusController.StatusStores.findAll(pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null)

################################################################################
##·······                     Store                                  ··········#
################################################################################
GET     /store                                                                  controllers.Stores.findAll( pageindex: Integer ?= null, pagesize: Integer ?= null, collection: String ?= null, sort: String ?= null, nameStore: String ?= null, statusStore: Long ?= 0L, deleted: Boolean ?= false)
GET     /store/:id                                                              controllers.Stores.findById(id : Long)
POST    /store/delete                                                           controllers.Stores.deletes()
POST    /store                                                                  controllers.Stores.create()
PUT     /store/:id                                                              controllers.Stores.update(id : Long)
DELETE  /store/:id                                                              controllers.Stores.delete(id : Long)

################################################################################
##·······                       Unit                                 ··········#
################################################################################
GET     /unit                                                                   controllers.Units.findAll( index: Integer ?= null, size: Integer ?= null, collection: String ?= null, sort: String ?= null, nameUnit: String ?= null, deleted: Boolean ?= false)
GET     /unit/:id                                                               controllers.Units.findById(id : Long)
POST    /unit/delete                                                            controllers.Units.deletes()
POST    /unit                                                                   controllers.Units.create()
PUT     /unit/:id                                                               controllers.Units.update(id : Long)
DELETE  /unit/:id                                                               controllers.Units.delete(id : Long)
